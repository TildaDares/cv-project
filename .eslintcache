[{"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/index.js":"1","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/NavBar.js":"2","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/General.js":"3","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Experience/ExperienceForm.js":"4","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Experience/Experience.js":"5","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Experience/RenderExperience.js":"6","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Education/RenderEducation.js":"7","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Resume.js":"8","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Education/Education.js":"9"},{"size":198,"mtime":1611866815257,"results":"10","hashOfConfig":"11"},{"size":882,"mtime":1611951754874,"results":"12","hashOfConfig":"11"},{"size":2344,"mtime":1612120033069,"results":"13","hashOfConfig":"11"},{"size":4397,"mtime":1612719158963,"results":"14","hashOfConfig":"11"},{"size":2765,"mtime":1612548730733,"results":"15","hashOfConfig":"11"},{"size":2120,"mtime":1612552404515,"results":"16","hashOfConfig":"11"},{"size":2083,"mtime":1612552423263,"results":"17","hashOfConfig":"11"},{"size":478,"mtime":1612386104513,"results":"18","hashOfConfig":"11"},{"size":2729,"mtime":1612548092891,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"v1ntoe",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/index.js",[],["41","42"],"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/NavBar.js",[],["43","44"],"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/General.js",[],"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Experience/ExperienceForm.js",[],"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Experience/Experience.js",["45","46","47","48","49","50","51","52"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ExperienceForm from \"./ExperienceForm\";\r\nimport RenderExperience from \"./RenderExperience\";\r\nexport default class Experience extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisNewForm: false,\r\n\t\t\texperienceArr: [],\r\n\t\t};\r\n\t\tthis.handleForm = this.handleForm.bind(this);\r\n\t\tthis.addNewExperience = this.addNewExperience.bind(this);\r\n\t\tthis.handleExperienceButton = this.handleExperienceButton.bind(this);\r\n\t\tthis.deleteExperience = this.deleteExperience.bind(this);\r\n\t\tthis.editExperience = this.editExperience.bind(this);\r\n\t}\r\n\r\n\tdeleteExperience(id) {\r\n\t\tthis.setState({\r\n\t\t\texperienceArr: this.state.experienceArr.filter((exp) => exp.id !== id),\r\n\t\t});\r\n\t}\r\n\r\n\thandleForm() {\r\n\t\tthis.setState({\r\n\t\t\tisNewForm: !this.state.isNewForm,\r\n\t\t});\r\n\t}\r\n\r\n\teditExperience(editedExp) {\r\n\t\tconst updatedArr = this.state.experienceArr.map((exp) => {\r\n\t\t\tif (exp.id === editedExp.id) {\r\n\t\t\t\texp = editedExp;\r\n\t\t\t}\r\n\t\t\treturn exp;\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\texperienceArr: updatedArr,\r\n\t\t});\r\n\t}\r\n\r\n\taddNewExperience(newExp) {\r\n\t\tthis.setState({\r\n\t\t\texperienceArr: this.state.experienceArr.concat(newExp),\r\n\t\t});\r\n\t}\r\n\r\n\thandleExperienceButton() {\r\n\t\tif (this.state.isNewForm || this.props.isReadOnly) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"cv-sections\">\r\n\t\t\t\t<Typography variant=\"h3\" className=\"heading\">\r\n\t\t\t\t\tWork Experience\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Divider variant=\"middle\" className=\"dividers\" />\r\n\t\t\t\t<div className=\"cv-section\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t{this.state.experienceArr.map((exp) => (\r\n\t\t\t\t\t\t\t<RenderExperience\r\n\t\t\t\t\t\t\t\tcompany={exp.company}\r\n\t\t\t\t\t\t\t\tposition={exp.position}\r\n\t\t\t\t\t\t\t\tdescription={exp.description}\r\n\t\t\t\t\t\t\t\tstartDate={exp.startDate}\r\n\t\t\t\t\t\t\t\tendDate={exp.endDate}\r\n\t\t\t\t\t\t\t\thandleEdit={this.handleEdit}\r\n\t\t\t\t\t\t\t\tdeleteExperience={this.deleteExperience}\r\n\t\t\t\t\t\t\t\tid={exp.id}\r\n\t\t\t\t\t\t\t\tkey={exp.id}\r\n\t\t\t\t\t\t\t\teditExperience={this.editExperience}\r\n\t\t\t\t\t\t\t\tisReadOnly={this.props.isReadOnly}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.state.isNewForm && (\r\n\t\t\t\t\t\t<ExperienceForm\r\n\t\t\t\t\t\t\taddExperience={this.addNewExperience}\r\n\t\t\t\t\t\t\tcloseForm={this.handleForm}\r\n\t\t\t\t\t\t\tisReadOnly={this.props.isReadOnly}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.handleExperienceButton() && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tclassName=\"float-right add-btn\"\r\n\t\t\t\t\t\tstartIcon={<AddIcon />}\r\n\t\t\t\t\t\tonClick={this.handleForm}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd Work Experience\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Experience/RenderExperience.js",[],"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Education/RenderEducation.js",[],"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Resume.js",[],"/mnt/c/Users/TILDA/Documents/My Projects/cv-project/src/components/Education/Education.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":2,"message":"60","line":68,"column":9,"nodeType":"61","endLine":68,"endColumn":25},{"ruleId":"62","severity":2,"message":"63","line":69,"column":18,"nodeType":"64","messageId":"65","endLine":69,"endColumn":21},{"ruleId":"62","severity":2,"message":"63","line":70,"column":19,"nodeType":"64","messageId":"65","endLine":70,"endColumn":22},{"ruleId":"62","severity":2,"message":"63","line":71,"column":22,"nodeType":"64","messageId":"65","endLine":71,"endColumn":25},{"ruleId":"62","severity":2,"message":"63","line":72,"column":20,"nodeType":"64","messageId":"65","endLine":72,"endColumn":23},{"ruleId":"62","severity":2,"message":"63","line":73,"column":18,"nodeType":"64","messageId":"65","endLine":73,"endColumn":21},{"ruleId":"62","severity":2,"message":"63","line":76,"column":13,"nodeType":"64","messageId":"65","endLine":76,"endColumn":16},{"ruleId":"62","severity":2,"message":"63","line":77,"column":14,"nodeType":"64","messageId":"65","endLine":77,"endColumn":17},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"react/jsx-no-undef","'RenderExperience' is not defined.","JSXIdentifier","no-undef","'edu' is not defined.","Identifier","undef","no-global-assign","no-unsafe-negation"]